name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Run every Monday at 2 AM UTC

# Cancel previous workflow runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  
env:
  COMPOSER_CACHE_DIR: ~/.composer/cache

jobs:
  # Setup job to determine test matrix and cache dependencies
  setup:
    name: Setup & Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      php-versions: ${{ steps.setup-matrix.outputs.php-versions }}
      composer-cache-hit: ${{ steps.composer-cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup test matrix
        id: setup-matrix
        run: |
          echo 'php-versions=["8.2", "8.4"]' >> $GITHUB_OUTPUT

      - name: Setup PHP for validation
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: Validate composer.json
        run: |
          composer validate --strict --no-check-all

      - name: Check composer.lock exists
        run: |
          if [[ ! -f "composer.lock" ]]; then
            echo "❌ composer.lock file is missing"
            echo "Please run 'composer install' locally and commit the composer.lock file"
            exit 1
          fi
          echo "✅ composer.lock file exists"

      - name: Verify required scripts exist
        run: |
          echo "Checking for required composer scripts..."
          
          # Check PHPUnit
          if ! composer run-script --list | grep -q "phpunit"; then
            echo "❌ PHPUnit script not found in composer.json"
            exit 1
          fi
          
          # Check PHPStan
          if ! composer run-script --list | grep -q "phpstan"; then
            echo "❌ PHPStan script not found in composer.json"
            exit 1
          fi
          
          # Check Rector
          if ! composer run-script --list | grep -q "rector"; then
            echo "❌ Rector script not found in composer.json"
            exit 1
          fi
          
          echo "✅ All required scripts found"

  # PHPUnit Tests Job
  phpunit-tests:
    name: PHPUnit Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJson(needs.setup.outputs.php-versions) }}
        include:
          - php-version: '8.2'
            coverage: true
          - php-version: '8.4'
            coverage: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, mbstring, intl
          coverage: ${{ matrix.coverage && 'xdebug' || 'none' }}
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

      - name: Run PHPUnit tests
        run: |
          if [[ "${{ matrix.coverage }}" == "true" ]]; then
            composer run-script phpunit -- --coverage-clover coverage.xml
          else
            composer run-script phpunit
          fi

      - name: Upload coverage reports
        if: matrix.coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: phpunit
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-logs-php-${{ matrix.php-version }}
          path: |
            coverage.xml
            phpunit.xml
          retention-days: 5

  # PHPStan Static Analysis Job
  phpstan-analysis:
    name: PHPStan Analysis (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJson(needs.setup.outputs.php-versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, mbstring, intl
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

      - name: Run PHPStan analysis
        run: |
          composer run-script phpstan

      - name: Upload PHPStan artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: phpstan-logs-php-${{ matrix.php-version }}
          path: |
            phpstan.neon
          retention-days: 5

  # Rector Code Quality Check Job
  rector-check:
    name: Rector Check (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJson(needs.setup.outputs.php-versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, mbstring, intl
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

      - name: Run Rector check
        run: |
          composer run-script rector:test

      - name: Upload Rector artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: rector-logs-php-${{ matrix.php-version }}
          path: |
            rector.php
          retention-days: 5

  # Coding Standards Job (if available)
  coding-standards:
    name: Coding Standards (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJson(needs.setup.outputs.php-versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: bcmath, mbstring, intl
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader

      - name: Check for PHP CS Fixer
        id: check-cs-fixer
        run: |
          if composer show --dev | grep -q "friendsofphp/php-cs-fixer"; then
            echo "has-cs-fixer=true" >> $GITHUB_OUTPUT
          else
            echo "has-cs-fixer=false" >> $GITHUB_OUTPUT
          fi

      - name: Run PHP CS Fixer (dry run)
        if: steps.check-cs-fixer.outputs.has-cs-fixer == 'true'
        run: |
          if grep -q "cs-fix" composer.json; then
            composer run-script cs-fix -- --dry-run --diff
          else
            vendor/bin/php-cs-fixer fix --dry-run --diff --verbose
          fi

      - name: Skip coding standards check
        if: steps.check-cs-fixer.outputs.has-cs-fixer == 'false'
        run: |
          echo "⚠️ PHP CS Fixer not found, skipping coding standards check"
          echo "Consider adding friendsofphp/php-cs-fixer to your dev dependencies"

  # Final job that depends on all test jobs
  finalization:
    name: CI Complete
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: 
      - setup
      - phpunit-tests
      - phpstan-analysis
      - rector-check
      - coding-standards
    if: always()
    steps:
      - name: Check all required jobs status
        run: |
          echo "Job Results:"
          echo "Setup: ${{ needs.setup.result }}"
          echo "PHPUnit Tests: ${{ needs.phpunit-tests.result }}"
          echo "PHPStan Analysis: ${{ needs.phpstan-analysis.result }}"
          echo "Rector Check: ${{ needs.rector-check.result }}"
          echo "Coding Standards: ${{ needs.coding-standards.result }}"
          
          # Check if any required job failed
          if [[ "${{ needs.setup.result }}" != "success" || 
                "${{ needs.phpunit-tests.result }}" != "success" || 
                "${{ needs.phpstan-analysis.result }}" != "success" || 
                "${{ needs.rector-check.result }}" != "success" ]]; then
            echo "❌ CI failed - one or more required jobs did not succeed"
            exit 1
          fi
          
          # Coding standards is allowed to be skipped but not failed
          if [[ "${{ needs.coding-standards.result }}" == "failure" ]]; then
            echo "❌ CI failed - coding standards check failed"
            exit 1
          fi
          
          echo "✅ All CI jobs completed successfully!"

      - name: Post success message
        if: success()
        run: |
          echo "🎉 CI pipeline completed successfully!"
          echo "All quality checks passed:"
          echo "  ✓ PHPUnit tests on PHP 8.2 and 8.4"
          echo "  ✓ PHPStan static analysis"
          echo "  ✓ Rector code quality checks"
          echo "  ✓ Coding standards (if available)"
          echo ""
          echo "Ready to merge! 🚀"
